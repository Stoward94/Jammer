@model GamingSessionApp.ViewModels.Account.EditAccountViewModel
@using GamingSessionApp.Helpers;

@{
    ViewBag.Title = "Edit Account";
}

<div class="row">

    @* Left hand nav *@
    <div class="col-sm-3">
        <ul class="edit-profile-nav">
            <li>
                <a href="@Url.Action("Edit", "Profile")">
                    <div>Edit Profile</div>
                </a>
            </li>
            <li class="active">
                <a href="@Url.Action("Edit", "Account")">
                    <div>Edit Account</div>
                </a>
            </li>
            <li>
                <a href="@Url.Action("Edit", "Preferences")">
                    <div>Edit Preferences</div>
                </a>
            </li>
        </ul>
    </div>

    @* Content *@
    <div class="col-md-9">
        @using (Html.BeginForm("Edit", "Account", FormMethod.Post))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Account Details</h4>
                <hr />

                @Html.SuccessMessage(ViewBag.SuccessMessage as string)

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TimeZoneId, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.DropDownListFor(m => m.TimeZoneId, Model.TimeZones, null, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.TimeZoneId, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CurrentPassword, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.CurrentPassword, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CurrentPassword, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-3" })
                    <div class="col-md-9">
                        @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>
                </div>

                <button type="submit" class="btn btn-default pull-right"><i class="fa fa-save"></i> Save</button>
            </div>
        }
    </div>
</div>
